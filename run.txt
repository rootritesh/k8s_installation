#AWS
Launch 2 t2.micro instance with all ports open in security groups AMI(Amazon AMI)
Login with ec2-user

#Master Node

#Login to root user
sudo su -- root
sudo yum update && yum install docker -y

echo '''
[kubernetes]
name=Kubernetes
baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-\$basearch
enabled=1
gpgcheck=1
repo_gpgcheck=1
gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
''' > /etc/yum.repos.d/kubernetes.repo

yum install docker kubelet kubeadm kubectl iproute-tc -y 
systemctl enable --now docker
systemctl enable --now kubelet

echo '''
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables = 1
''' > /etc/sysctl.d/k8s.conf
sysctl --system

echo '''
{
  "exec-opts": ["native.cgroupdriver=systemd"]
}
''' > /etc/docker/daemon.json
sudo systemctl restart docker

kubeadm init --pod-network-cidr=192.168.0.0/16 --ignore-preflight-errors=NumCPU --ignore-preflight-errors=Mem

mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config

kubectl create -f https://raw.githubusercontent.com/projectcalico/calico/v3.25.0/manifests/tigera-operator.yaml
wget https://raw.githubusercontent.com/projectcalico/calico/v3.25.0/manifests/custom-resources.yaml

vim custom-resources.yaml(match the cidr from kubeadm init command in ippools)
kubectl create -f custom-resources.yaml
kubectl get pods -n calico-system (Wait till all pods in running state)
kubectl get nodes

======================================================================================================================================================================

#Nodes

#Login to root user
sudo su -- root
sudo yum update && yum install docker -y

echo '''
[kubernetes]
name=Kubernetes
baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-\$basearch
enabled=1
gpgcheck=1
repo_gpgcheck=1
gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
''' > /etc/yum.repos.d/kubernetes.repo

yum install docker kubelet kubeadm kubectl iproute-tc -y 
systemctl enable --now docker
systemctl enable --now kubelet

echo '''
{
  "exec-opts": ["native.cgroupdriver=systemd"]
}
''' > /etc/docker/daemon.json
sudo systemctl restart docker
echo '''
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables = 1
''' > /etc/sysctl.d/k8s.conf
sysctl --system

kubectl join .....

